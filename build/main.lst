ARM GAS  /tmp/ccjMiY16.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Error_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	Error_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	Error_Handler:
  27              	.LFB134:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "dac.h"
  22:Core/Src/main.c **** #include "dma.h"
  23:Core/Src/main.c **** #include "opamp.h"
  24:Core/Src/main.c **** #include "tim.h"
  25:Core/Src/main.c **** #include "gpio.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** #include <math.h>
  30:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/ccjMiY16.s 			page 2


  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** volatile uint16_t value[10] = {2048, 2048, 2048, 2048, 2048, 0, 0, 0, 0, 0};
  51:Core/Src/main.c **** /* USER CODE END PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.c **** void SystemClock_Config(void);
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****   * @brief  The application entry point.
  66:Core/Src/main.c ****   * @retval int
  67:Core/Src/main.c ****   */
  68:Core/Src/main.c **** int main(void)
  69:Core/Src/main.c **** {
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* USER CODE END 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Core/Src/main.c ****   HAL_Init();
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Configure the system clock */
  84:Core/Src/main.c ****   SystemClock_Config();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  87:Core/Src/main.c **** 
ARM GAS  /tmp/ccjMiY16.s 			page 3


  88:Core/Src/main.c ****   /* USER CODE END SysInit */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Initialize all configured peripherals */
  91:Core/Src/main.c ****   MX_GPIO_Init();
  92:Core/Src/main.c ****   MX_DMA_Init();
  93:Core/Src/main.c ****   MX_OPAMP1_Init();
  94:Core/Src/main.c ****   MX_DAC3_Init();
  95:Core/Src/main.c ****   MX_TIM6_Init();
  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  97:Core/Src/main.c ****   
  98:Core/Src/main.c ****   HAL_OPAMP_Start(&hopamp1);     
  99:Core/Src/main.c ****   HAL_DAC_Start_DMA(&hdac3, DAC_CHANNEL_1, (uint32_t *) &value, 10, DAC_ALIGN_12B_R);
 100:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim6);
 101:Core/Src/main.c ****   
 102:Core/Src/main.c ****     
 103:Core/Src/main.c ****   
 104:Core/Src/main.c ****   /* USER CODE END 2 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Infinite loop */
 107:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 108:Core/Src/main.c ****   while (1)
 109:Core/Src/main.c ****   {
 110:Core/Src/main.c ****     /* USER CODE END WHILE */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 113:Core/Src/main.c ****     // HAL_Delay(10);
 114:Core/Src/main.c ****     // value = 0;
 115:Core/Src/main.c ****     // HAL_Delay(10);
 116:Core/Src/main.c ****     // value = 0xFFF;
 117:Core/Src/main.c ****   }
 118:Core/Src/main.c ****   /* USER CODE END 3 */
 119:Core/Src/main.c **** }
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** /**
 122:Core/Src/main.c ****   * @brief System Clock Configuration
 123:Core/Src/main.c ****   * @retval None
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c **** void SystemClock_Config(void)
 126:Core/Src/main.c **** {
 127:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 128:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 131:Core/Src/main.c ****   */
 132:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST);
 133:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 134:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 135:Core/Src/main.c ****   */
 136:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 137:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
ARM GAS  /tmp/ccjMiY16.s 			page 4


 145:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 146:Core/Src/main.c ****   {
 147:Core/Src/main.c ****     Error_Handler();
 148:Core/Src/main.c ****   }
 149:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 150:Core/Src/main.c ****   */
 151:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 152:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 153:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 154:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 159:Core/Src/main.c ****   {
 160:Core/Src/main.c ****     Error_Handler();
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c **** }
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** /* USER CODE END 4 */
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** /**
 169:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 170:Core/Src/main.c ****   * @retval None
 171:Core/Src/main.c ****   */
 172:Core/Src/main.c **** void Error_Handler(void)
 173:Core/Src/main.c **** {
  29              		.loc 1 173 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 174:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 175:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 176:Core/Src/main.c ****   __disable_irq();
  35              		.loc 1 176 3 view .LVU1
  36              	.LBB4:
  37              	.LBI4:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/ccjMiY16.s 			page 5


  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /tmp/ccjMiY16.s 			page 6


  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
ARM GAS  /tmp/ccjMiY16.s 			page 7


 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
ARM GAS  /tmp/ccjMiY16.s 			page 8


 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  39              		.loc 2 207 27 view .LVU2
  40              	.LBB5:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  41              		.loc 2 209 3 view .LVU3
  42              		.syntax unified
  43              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 72B6     		cpsid i
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.L2:
  49              	.LBE5:
  50              	.LBE4:
 177:Core/Src/main.c ****   while (1)
  51              		.loc 1 177 3 discriminator 1 view .LVU4
 178:Core/Src/main.c ****   {
 179:Core/Src/main.c ****   }
  52              		.loc 1 179 3 discriminator 1 view .LVU5
 177:Core/Src/main.c ****   while (1)
  53              		.loc 1 177 9 discriminator 1 view .LVU6
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE134:
  58              		.section	.text.SystemClock_Config,"ax",%progbits
  59              		.align	1
  60              		.global	SystemClock_Config
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  65              	SystemClock_Config:
  66              	.LFB133:
 126:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  67              		.loc 1 126 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 80
ARM GAS  /tmp/ccjMiY16.s 			page 9


  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 00B5     		push	{lr}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 4
  74              		.cfi_offset 14, -4
  75 0002 95B0     		sub	sp, sp, #84
  76              	.LCFI1:
  77              		.cfi_def_cfa_offset 88
 127:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  78              		.loc 1 127 3 view .LVU8
 127:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  79              		.loc 1 127 22 is_stmt 0 view .LVU9
  80 0004 3822     		movs	r2, #56
  81 0006 0021     		movs	r1, #0
  82 0008 06A8     		add	r0, sp, #24
  83 000a FFF7FEFF 		bl	memset
  84              	.LVL0:
 128:Core/Src/main.c **** 
  85              		.loc 1 128 3 is_stmt 1 view .LVU10
 128:Core/Src/main.c **** 
  86              		.loc 1 128 22 is_stmt 0 view .LVU11
  87 000e 0020     		movs	r0, #0
  88 0010 0190     		str	r0, [sp, #4]
  89 0012 0290     		str	r0, [sp, #8]
  90 0014 0390     		str	r0, [sp, #12]
  91 0016 0490     		str	r0, [sp, #16]
  92 0018 0590     		str	r0, [sp, #20]
 132:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
  93              		.loc 1 132 3 is_stmt 1 view .LVU12
  94 001a FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
  95              	.LVL1:
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  96              		.loc 1 136 3 view .LVU13
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  97              		.loc 1 136 36 is_stmt 0 view .LVU14
  98 001e 0123     		movs	r3, #1
  99 0020 0693     		str	r3, [sp, #24]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 100              		.loc 1 137 3 is_stmt 1 view .LVU15
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 101              		.loc 1 137 30 is_stmt 0 view .LVU16
 102 0022 4FF48033 		mov	r3, #65536
 103 0026 0793     		str	r3, [sp, #28]
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 104              		.loc 1 138 3 is_stmt 1 view .LVU17
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 105              		.loc 1 138 34 is_stmt 0 view .LVU18
 106 0028 0223     		movs	r3, #2
 107 002a 0D93     		str	r3, [sp, #52]
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
 108              		.loc 1 139 3 is_stmt 1 view .LVU19
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
 109              		.loc 1 139 35 is_stmt 0 view .LVU20
 110 002c 0322     		movs	r2, #3
 111 002e 0E92     		str	r2, [sp, #56]
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 112              		.loc 1 140 3 is_stmt 1 view .LVU21
ARM GAS  /tmp/ccjMiY16.s 			page 10


 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 113              		.loc 1 140 30 is_stmt 0 view .LVU22
 114 0030 0F93     		str	r3, [sp, #60]
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 115              		.loc 1 141 3 is_stmt 1 view .LVU23
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 116              		.loc 1 141 30 is_stmt 0 view .LVU24
 117 0032 5522     		movs	r2, #85
 118 0034 1092     		str	r2, [sp, #64]
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 119              		.loc 1 142 3 is_stmt 1 view .LVU25
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 120              		.loc 1 142 30 is_stmt 0 view .LVU26
 121 0036 1193     		str	r3, [sp, #68]
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 122              		.loc 1 143 3 is_stmt 1 view .LVU27
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 123              		.loc 1 143 30 is_stmt 0 view .LVU28
 124 0038 1293     		str	r3, [sp, #72]
 144:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 125              		.loc 1 144 3 is_stmt 1 view .LVU29
 144:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 126              		.loc 1 144 30 is_stmt 0 view .LVU30
 127 003a 1393     		str	r3, [sp, #76]
 145:Core/Src/main.c ****   {
 128              		.loc 1 145 3 is_stmt 1 view .LVU31
 145:Core/Src/main.c ****   {
 129              		.loc 1 145 7 is_stmt 0 view .LVU32
 130 003c 06A8     		add	r0, sp, #24
 131 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 132              	.LVL2:
 145:Core/Src/main.c ****   {
 133              		.loc 1 145 6 view .LVU33
 134 0042 80B9     		cbnz	r0, .L7
 151:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 135              		.loc 1 151 3 is_stmt 1 view .LVU34
 151:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 136              		.loc 1 151 31 is_stmt 0 view .LVU35
 137 0044 0F23     		movs	r3, #15
 138 0046 0193     		str	r3, [sp, #4]
 153:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 139              		.loc 1 153 3 is_stmt 1 view .LVU36
 153:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 140              		.loc 1 153 34 is_stmt 0 view .LVU37
 141 0048 0323     		movs	r3, #3
 142 004a 0293     		str	r3, [sp, #8]
 154:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 143              		.loc 1 154 3 is_stmt 1 view .LVU38
 154:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 144              		.loc 1 154 35 is_stmt 0 view .LVU39
 145 004c 0023     		movs	r3, #0
 146 004e 0393     		str	r3, [sp, #12]
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 147              		.loc 1 155 3 is_stmt 1 view .LVU40
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 148              		.loc 1 155 36 is_stmt 0 view .LVU41
 149 0050 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/ccjMiY16.s 			page 11


 156:Core/Src/main.c **** 
 150              		.loc 1 156 3 is_stmt 1 view .LVU42
 156:Core/Src/main.c **** 
 151              		.loc 1 156 36 is_stmt 0 view .LVU43
 152 0052 0593     		str	r3, [sp, #20]
 158:Core/Src/main.c ****   {
 153              		.loc 1 158 3 is_stmt 1 view .LVU44
 158:Core/Src/main.c ****   {
 154              		.loc 1 158 7 is_stmt 0 view .LVU45
 155 0054 0421     		movs	r1, #4
 156 0056 0DEB0100 		add	r0, sp, r1
 157 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 158              	.LVL3:
 158:Core/Src/main.c ****   {
 159              		.loc 1 158 6 view .LVU46
 160 005e 20B9     		cbnz	r0, .L8
 162:Core/Src/main.c **** 
 161              		.loc 1 162 1 view .LVU47
 162 0060 15B0     		add	sp, sp, #84
 163              	.LCFI2:
 164              		.cfi_remember_state
 165              		.cfi_def_cfa_offset 4
 166              		@ sp needed
 167 0062 5DF804FB 		ldr	pc, [sp], #4
 168              	.L7:
 169              	.LCFI3:
 170              		.cfi_restore_state
 147:Core/Src/main.c ****   }
 171              		.loc 1 147 5 is_stmt 1 view .LVU48
 172 0066 FFF7FEFF 		bl	Error_Handler
 173              	.LVL4:
 174              	.L8:
 160:Core/Src/main.c ****   }
 175              		.loc 1 160 5 view .LVU49
 176 006a FFF7FEFF 		bl	Error_Handler
 177              	.LVL5:
 178              		.cfi_endproc
 179              	.LFE133:
 181              		.section	.text.main,"ax",%progbits
 182              		.align	1
 183              		.global	main
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 188              	main:
 189              	.LFB132:
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 190              		.loc 1 69 1 view -0
 191              		.cfi_startproc
 192              		@ Volatile: function does not return.
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195 0000 00B5     		push	{lr}
 196              	.LCFI4:
 197              		.cfi_def_cfa_offset 4
 198              		.cfi_offset 14, -4
 199 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccjMiY16.s 			page 12


 200              	.LCFI5:
 201              		.cfi_def_cfa_offset 16
  77:Core/Src/main.c **** 
 202              		.loc 1 77 3 view .LVU51
 203 0004 FFF7FEFF 		bl	HAL_Init
 204              	.LVL6:
  84:Core/Src/main.c **** 
 205              		.loc 1 84 3 view .LVU52
 206 0008 FFF7FEFF 		bl	SystemClock_Config
 207              	.LVL7:
  91:Core/Src/main.c ****   MX_DMA_Init();
 208              		.loc 1 91 3 view .LVU53
 209 000c FFF7FEFF 		bl	MX_GPIO_Init
 210              	.LVL8:
  92:Core/Src/main.c ****   MX_OPAMP1_Init();
 211              		.loc 1 92 3 view .LVU54
 212 0010 FFF7FEFF 		bl	MX_DMA_Init
 213              	.LVL9:
  93:Core/Src/main.c ****   MX_DAC3_Init();
 214              		.loc 1 93 3 view .LVU55
 215 0014 FFF7FEFF 		bl	MX_OPAMP1_Init
 216              	.LVL10:
  94:Core/Src/main.c ****   MX_TIM6_Init();
 217              		.loc 1 94 3 view .LVU56
 218 0018 FFF7FEFF 		bl	MX_DAC3_Init
 219              	.LVL11:
  95:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 220              		.loc 1 95 3 view .LVU57
 221 001c FFF7FEFF 		bl	MX_TIM6_Init
 222              	.LVL12:
  98:Core/Src/main.c ****   HAL_DAC_Start_DMA(&hdac3, DAC_CHANNEL_1, (uint32_t *) &value, 10, DAC_ALIGN_12B_R);
 223              		.loc 1 98 3 view .LVU58
 224 0020 0648     		ldr	r0, .L12
 225 0022 FFF7FEFF 		bl	HAL_OPAMP_Start
 226              	.LVL13:
  99:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim6);
 227              		.loc 1 99 3 view .LVU59
 228 0026 0021     		movs	r1, #0
 229 0028 0091     		str	r1, [sp]
 230 002a 0A23     		movs	r3, #10
 231 002c 044A     		ldr	r2, .L12+4
 232 002e 0548     		ldr	r0, .L12+8
 233 0030 FFF7FEFF 		bl	HAL_DAC_Start_DMA
 234              	.LVL14:
 100:Core/Src/main.c ****   
 235              		.loc 1 100 3 view .LVU60
 236 0034 0448     		ldr	r0, .L12+12
 237 0036 FFF7FEFF 		bl	HAL_TIM_Base_Start
 238              	.LVL15:
 239              	.L10:
 108:Core/Src/main.c ****   {
 240              		.loc 1 108 3 discriminator 1 view .LVU61
 117:Core/Src/main.c ****   /* USER CODE END 3 */
 241              		.loc 1 117 3 discriminator 1 view .LVU62
 108:Core/Src/main.c ****   {
 242              		.loc 1 108 9 discriminator 1 view .LVU63
 243 003a FEE7     		b	.L10
ARM GAS  /tmp/ccjMiY16.s 			page 13


 244              	.L13:
 245              		.align	2
 246              	.L12:
 247 003c 00000000 		.word	hopamp1
 248 0040 00000000 		.word	.LANCHOR0
 249 0044 00000000 		.word	hdac3
 250 0048 00000000 		.word	htim6
 251              		.cfi_endproc
 252              	.LFE132:
 254              		.global	value
 255              		.section	.data.value,"aw"
 256              		.align	2
 257              		.set	.LANCHOR0,. + 0
 260              	value:
 261 0000 0008     		.short	2048
 262 0002 0008     		.short	2048
 263 0004 0008     		.short	2048
 264 0006 0008     		.short	2048
 265 0008 0008     		.short	2048
 266 000a 0000     		.short	0
 267 000c 0000     		.short	0
 268 000e 0000     		.short	0
 269 0010 0000     		.short	0
 270 0012 0000     		.short	0
 271              		.text
 272              	.Letext0:
 273              		.file 3 "/home/alexw/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-non
 274              		.file 4 "/home/alexw/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-non
 275              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 276              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 277              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 278              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 279              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 280              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dac.h"
 281              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_opamp.h"
 282              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 283              		.file 13 "Core/Inc/dac.h"
 284              		.file 14 "Core/Inc/opamp.h"
 285              		.file 15 "Core/Inc/tim.h"
 286              		.file 16 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 287              		.file 17 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 288              		.file 18 "Core/Inc/gpio.h"
 289              		.file 19 "Core/Inc/dma.h"
 290              		.file 20 "<built-in>"
ARM GAS  /tmp/ccjMiY16.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccjMiY16.s:20     .text.Error_Handler:0000000000000000 $t
     /tmp/ccjMiY16.s:26     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccjMiY16.s:59     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccjMiY16.s:65     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccjMiY16.s:182    .text.main:0000000000000000 $t
     /tmp/ccjMiY16.s:188    .text.main:0000000000000000 main
     /tmp/ccjMiY16.s:247    .text.main:000000000000003c $d
     /tmp/ccjMiY16.s:260    .data.value:0000000000000000 value
     /tmp/ccjMiY16.s:256    .data.value:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_OPAMP1_Init
MX_DAC3_Init
MX_TIM6_Init
HAL_OPAMP_Start
HAL_DAC_Start_DMA
HAL_TIM_Base_Start
hopamp1
hdac3
htim6
